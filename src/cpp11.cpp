// Generated by cpp11: do not edit by hand
// clang-format off


#include "cpp11/declarations.hpp"
#include <R_ext/Visibility.h>

// code.cpp
double phi_to_theta(double phi, int transformation_type, double theta_min, double theta_max);
extern "C" SEXP _dj11_phi_to_theta(SEXP phi, SEXP transformation_type, SEXP theta_min, SEXP theta_max) {
  BEGIN_CPP11
    return cpp11::as_sexp(phi_to_theta(cpp11::as_cpp<cpp11::decay_t<double>>(phi), cpp11::as_cpp<cpp11::decay_t<int>>(transformation_type), cpp11::as_cpp<cpp11::decay_t<double>>(theta_min), cpp11::as_cpp<cpp11::decay_t<double>>(theta_max)));
  END_CPP11
}
// code.cpp
double theta_to_phi(double theta, int transformation_type, double theta_min, double theta_max);
extern "C" SEXP _dj11_theta_to_phi(SEXP theta, SEXP transformation_type, SEXP theta_min, SEXP theta_max) {
  BEGIN_CPP11
    return cpp11::as_sexp(theta_to_phi(cpp11::as_cpp<cpp11::decay_t<double>>(theta), cpp11::as_cpp<cpp11::decay_t<int>>(transformation_type), cpp11::as_cpp<cpp11::decay_t<double>>(theta_min), cpp11::as_cpp<cpp11::decay_t<double>>(theta_max)));
  END_CPP11
}
// code.cpp
list mcmc(doubles theta_init, integers transform_type, doubles theta_min, doubles theta_max, doubles data, int iterations, function ll, function lp);
extern "C" SEXP _dj11_mcmc(SEXP theta_init, SEXP transform_type, SEXP theta_min, SEXP theta_max, SEXP data, SEXP iterations, SEXP ll, SEXP lp) {
  BEGIN_CPP11
    return cpp11::as_sexp(mcmc(cpp11::as_cpp<cpp11::decay_t<doubles>>(theta_init), cpp11::as_cpp<cpp11::decay_t<integers>>(transform_type), cpp11::as_cpp<cpp11::decay_t<doubles>>(theta_min), cpp11::as_cpp<cpp11::decay_t<doubles>>(theta_max), cpp11::as_cpp<cpp11::decay_t<doubles>>(data), cpp11::as_cpp<cpp11::decay_t<int>>(iterations), cpp11::as_cpp<cpp11::decay_t<function>>(ll), cpp11::as_cpp<cpp11::decay_t<function>>(lp)));
  END_CPP11
}

extern "C" {
static const R_CallMethodDef CallEntries[] = {
    {"_dj11_mcmc",         (DL_FUNC) &_dj11_mcmc,         8},
    {"_dj11_phi_to_theta", (DL_FUNC) &_dj11_phi_to_theta, 4},
    {"_dj11_theta_to_phi", (DL_FUNC) &_dj11_theta_to_phi, 4},
    {NULL, NULL, 0}
};
}

extern "C" attribute_visible void R_init_dj11(DllInfo* dll){
  R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
  R_useDynamicSymbols(dll, FALSE);
  R_forceSymbols(dll, TRUE);
}
